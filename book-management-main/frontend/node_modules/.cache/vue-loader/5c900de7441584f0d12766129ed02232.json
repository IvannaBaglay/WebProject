{"remainingRequest":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\src\\pages\\Dashboard.vue?vue&type=style&index=0&id=1d81e2c0&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\src\\pages\\Dashboard.vue","mtime":1620896174640},{"path":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Пользователь\\Desktop\\лаб\\Web\\book-management-main\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucG9zdGVyLWltYWdlIHsKICB3aWR0aDogNTBweDsKICBoZWlnaHQ6IDUwcHg7Cn0KCi5wb3N0ZXItdGh1bWJuYWlsIHsKICB3aWR0aDogMTUwcHg7CiAgaGVpZ2h0OiAxNTBweDsKfQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <v-row>\n          <v-col cols=\"12\">\n            <v-card flat>\n              <v-card-title class=\"headline font-weight-bold mx-6 mt-4\">\n                My Books\n                <v-spacer></v-spacer>\n                <v-btn color=\"primary\" @click=\"editBook(null)\">Add book</v-btn>\n              </v-card-title>\n            </v-card>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"12\">\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"books\"\n              item-key=\"id\"\n              multi-sort\n              :loading=\"loading\"\n            >\n              <template v-slot:item.book_poster_image=\"{ item }\">\n                <v-img\n                  :src=\"item.book_poster_image\"\n                  class=\"poster-image\"\n                ></v-img>\n              </template>\n              <template v-slot:item.actions=\"{ item }\">\n                <v-btn color=\"primary\" @click=\"editBook(item)\">Edit</v-btn>\n                &nbsp;\n                <v-btn color=\"error\" @click=\"deleteBook(item)\">Delete</v-btn>\n              </template>\n            </v-data-table>\n          </v-col>\n        </v-row>\n        <v-dialog v-model=\"editing\" max-width=\"500px\">\n          <v-card>\n            <v-card-title>\n              <span v-if=\"bookItem.id === null\" class=\"headline\">Add book</span>\n              <span v-else class=\"headline\">Edit Book</span>\n              <v-spacer></v-spacer>\n              <v-btn\n                fab\n                text\n                dark\n                small\n                color=\"red lighten-3\"\n                style=\"margin-right: -6px\"\n                @click=\"editing = !editing\"\n                >X</v-btn\n              >\n            </v-card-title>\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"8\">\n                    <v-file-input\n                      accept=\".png, .gif, .jpg\"\n                      prepend-icon=\"mdi-file-image\"\n                      label=\"Poster Image\"\n                      placeholder=\"Please select book cover\"\n                      @change=\"onImageUpload\"\n                    ></v-file-input>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      v-model=\"bookItem.book_title\"\n                      label=\"Title\"\n                      max=\"64\"\n                      dense\n                      hide-details\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      v-model=\"bookItem.book_author\"\n                      label=\"Author\"\n                      max=\"64\"\n                      dense\n                      hide-details\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n                <v-row>\n                  <v-col cols=\"12\">\n                    <v-textarea\n                      outlined\n                      v-model=\"bookItem.book_description\"\n                      label=\"Description\"\n                    ></v-textarea>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn\n                dark\n                color=\"green\"\n                :loading=\"loadingState\"\n                @click=\"saveEditing\"\n                >Save</v-btn\n              >\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <v-snackbar\n          v-model=\"snackbar\"\n          :top=\"true\"\n          :timeout=\"5000\"\n          :color=\"snackColor\"\n          >{{ snackMsg }}</v-snackbar\n        >\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  name: \"dashboard\",\n  data: () => {\n    return {\n      userId: null,\n      books: [],\n      loading: true,\n      editing: false,\n      isEditing: false,\n      loadingState: false,\n      snackbar: false,\n      snackColor: \"success\",\n      snackMsg: \"\",\n      updatedBookPoster: null,\n      bookItem: {\n        id: null,\n        user_target_id: null,\n        book_title: null,\n        book_author: null,\n        book_description: null,\n        book_poster_image: null,\n      },\n    };\n  },\n  mounted() {\n    this.userId = this.$store.getters.userId;\n    this.getMyBooks();\n  },\n  computed: {\n    loggedIn: function () {\n      return this.$store.getters.loggedIn;\n    },\n    headers: function () {\n      return [\n        {\n          text: \"ID\",\n          sortable: true,\n          value: \"id\",\n        },\n        {\n          text: \"Cover\",\n          sortable: true,\n          value: \"book_poster_image\",\n        },\n        {\n          text: \"Title\",\n          sortable: true,\n          value: \"book_title\",\n        },\n        {\n          text: \"Author\",\n          sortable: true,\n          value: \"book_author\",\n        },\n        {\n          text: \"Description\",\n          sortable: true,\n          value: \"book_description\",\n        },\n        {\n          text: \"Uploaded Date\",\n          sortable: true,\n          value: \"book_created_at\",\n        },\n        {\n          text: \"Edit\",\n          value: \"actions\",\n        },\n      ];\n    },\n  },\n  methods: {\n    async getMyBooks() {\n      await this.$store.dispatch(\"myBooks\");\n      this.books = this.$store.getters.books;\n      this.loading = false;\n    },\n\n    editBook(item) {\n      this.bookItem = Object.assign({}, item);\n\n      this.editing = true;\n      this.isEditing = true;\n    },\n\n    async deleteBook(item) {\n      const confirm = await this.$confirm(\"Do you want to remove really?\");\n      if (confirm) {\n        const ret = await this.$store.dispatch(\"removeBook\", {\n          id: item.id,\n        });\n        this.alertMessage(\"success\", \"The book has been removed.\");\n        this.getMyBooks();\n      }\n    },\n\n    onImageUpload(file) {\n      this.bookItem.book_poster_image = file;\n      this.updatedBookPoster = file;\n    },\n\n    async saveEditing() {\n      const obj = this.bookItem;\n      if (!obj.book_title) {\n        this.alertMessage(\"fail\", \"Please input book title.\");\n        return;\n      }\n\n      if (!obj.book_author) {\n        this.alertMessage(\"fail\", \"Please input book author.\");\n        return;\n      }\n\n      if (!obj.book_description) {\n        this.alertMessage(\"fail\", \"Please input book description.\");\n        return;\n      }\n\n      this.loadingState = true;\n      let formData = new FormData();\n      formData.append(\"book_description\", this.bookItem.book_description);\n      formData.append(\"book_author\", this.bookItem.book_author);\n      formData.append(\"book_title\", this.bookItem.book_title);\n      formData.append(\"user_target\", this.userId);\n\n      if (!obj.id) {\n        if (this.bookItem.book_poster_image != null) {\n          formData.append(\"book_poster_image\", this.bookItem.book_poster_image);\n        }\n        await this.$store.dispatch(\"createBook\", formData);\n\n        if (this.$store.getters.status == 400) {\n          this.alertMessage(\"fail\", this.$store.getters.message);\n          this.loadingState = false;\n          return;\n        } else {\n          this.alertMessage(\"success\", \"The new book has been added.\");\n        }\n      } else {\n        if (this.updatedBookPoster != null) {\n          formData.append(\"book_poster_image\", this.updatedBookPoster);\n        }\n        const ret = await this.$store.dispatch(\"updateBook\", {\n          id: obj.id,\n          form: formData,\n        });\n\n        if (this.$store.getters.status == 400) {\n          this.alertMessage(\"fail\", this.$store.getters.message);\n          this.loadingState = false;\n          return;\n        } else {\n          this.alertMessage(\"success\", \"The book has been updated.\");\n        }\n      }\n\n      this.getMyBooks();\n      this.editing = false;\n      this.loadingState = false;\n    },\n\n    alertMessage(type, msg) {\n      if (msg) {\n        this.snackbar = true;\n        this.snackColor =\n          type === \"success\" ? \"success\" : type === \"fail\" ? \"error\" : \"info\";\n        this.snackMsg = msg;\n      }\n    },\n  },\n  head() {\n    return {\n      title: \"Dashboard -\",\n    };\n  },\n};\n</script>\n<style scoped>\n.poster-image {\n  width: 50px;\n  height: 50px;\n}\n\n.poster-thumbnail {\n  width: 150px;\n  height: 150px;\n}\n</style>"]}]}